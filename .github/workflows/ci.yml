name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npm i
      #- uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # Run prisma generate first
      - run: npx nx prisma-generate movies-prisma-lib --skip-nx-cache

      # Now run lint and build in parallel
      - run: npx nx run-many -t lint build --skip-nx-cache --parallel

      # Now run shared-types tests
      - run: npx nx run shared-types:test --skip-nx-cache

      # Now run movies-ui integration tests
      - run: npx nx run movies-ui:test --skip-nx-cache

      # Now run shared-ui tests
      - run: npx nx run shared-ui:test --skip-nx-cache

      - name: Start Storybook
        run: npx nx run shared-ui:storybook -p 6006 & # Start Storybook in the background
        env:
          CI: true # Set CI environment variable if needed

      - name: Install playwright
        run:  npx playwright install

      - name: Wait for Storybook to be ready
        run: |
          sleep 10

      - name: Run Storybook Tests
        run: npx nx run shared-ui:test-storybook # Adjust this command based on your test setup
